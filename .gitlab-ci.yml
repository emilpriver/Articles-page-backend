image: docker:latest
services:
  - docker:dind

stages:
  - build
  - tag
  - migrate
  - deploy

variables:
  CONTAINER_IMAGE: registry.gitlab.com/emilpriver/articles-page-backend/django
  BUILD_IMAGE: $CONTAINER_IMAGE:$CI_PIPELINE_ID
  PRODUCTION_IMAGE: $CONTAINER_IMAGE:master

#production
build:
  stage: build
  script:
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --no-cache -t $BUILD_IMAGE .
    - docker push $BUILD_IMAGE
  only:
    - master
  tags: [docker]

tag:
  stage: tag
  script:
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $BUILD_IMAGE
    - docker tag $BUILD_IMAGE $PRODUCTION_IMAGE
    - docker push $PRODUCTION_IMAGE
    
    tags: [docker]
    only:
      - master
      - docker
        
migrate:
  stage: migrate
  script:
    - sudo docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - sudo docker pull $BUILD_IMAGE
    - sudo docker run --env-file /home/ubuntu/env/news_app/.env $BUILD_IMAGE python manage.py migrate
  only:
    - master
  tags: [deploy]

deploy:
  stage: deploy
  tags: [deploy]
  script:
    - sudo docker image prune -f
    - sudo docker-compose -f docker-compose.$CI_COMMIT_REF_NAME.yml down
    - sudo docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - sudo docker-compose -f docker-compose.$CI_COMMIT_REF_NAME.yml pull
    - sudo docker-compose -f docker-compose.$CI_COMMIT_REF_NAME.yml up -d

  only:
    - master
    - staging
